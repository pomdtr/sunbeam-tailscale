#!/usr/bin/env -S deno run -A --ext=ts

if (Deno.args.length === 0) {
  console.log(JSON.stringify({
    title: "Tailcale",
    root: "list-devices",
    commands: [
      {
        name: "list-devices",
        title: "Search My Devices",
        mode: "view",
      },
    ],
  }));

  Deno.exit(0);
}

const { command } = JSON.parse(Deno.args[0]);

if (command == "list-devices") {
  const statusCmd = new Deno.Command("tailscale", {
    args: ["status", "--json"],
  });

  const res = await statusCmd.output();
  const status = JSON.parse(new TextDecoder().decode(res.stdout));

  const devices = Object.values(status.Peer) as any[];
  const items = devices.map((device) => ({
    title: device.DNSName.split(".")[0],
    subtitle: device.TailscaleIPs[0],
    accessories: [device.OS, device.Online ? "online" : "offline"],
    actions: [
      {
        title: "Copy IP",
        onAction: {
          type: "copy",
          text: device.TailscaleIPs[0],
          exit: true,
        },
      },
    ],
  }));

  console.log(JSON.stringify({ type: "list", items }));
}
